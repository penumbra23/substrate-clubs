
//! Autogenerated weights for `pallet_clubs`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-15, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `penumbra23-thinkpad`, CPU: `AMD Ryzen 7 PRO 5850U with Radeon Graphics`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/node-template
// benchmark
// pallet
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet-clubs
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// pallets/all-weight.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_clubs`.
/// Weight functions needed for pallet_clubs.
pub trait WeightInfo {
	fn add_club(s: u32, ) -> Weight;
	fn add_member(s: u32, ) -> Weight;
	fn extend_membership() -> Weight;
}
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Clubs Clubs (r:1 w:1)
	/// The range of component `s` is `[0, 100]`.
	fn add_club(_s: u32, ) -> Weight {
		(14_898_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Clubs Clubs (r:1 w:0)
	// Storage: Clubs Memberships (r:1 w:1)
	/// The range of component `s` is `[0, 100]`.
	fn add_member(_s: u32, ) -> Weight {
		(20_438_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Clubs Clubs (r:1 w:0)
	// Storage: Clubs Memberships (r:1 w:1)
	fn extend_membership() -> Weight {
		(20_627_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
